openapi: 3.0.0
info:
  version: 1.0.0
  title: Pretty Paradise
  description: ''
# Added by API Auto Mocking Plugin
servers:
  - description: SwaggerHub API Auto Mocking
    url: http://localhost:8001/prettyparadise
    
tags: 
 - name: admin
   description: Admin related operations
   
paths:
  /products:
    post:
      tags: 
        - admin
      summary: Create a new product with the specified details.
      operationId: createNewProductDetail
      requestBody:
       content:
         application/json:
          schema: 
            $ref: '#/components/schemas/Product'
          
      
      responses:
        "201":
         description: New product created.
         content:
           application/json:
            schema:
              $ref: "#/components/schemas/Product"
        "500":
          description: error occurred - see status code and problem object for more information.
          content:
            application/problem+json:
              schema:
                $ref: 'https://opensource.zalando.com/problem/schema.yaml#/Problem'
    
    get:
      tags: 
        - admin
      summary: Retrieves all products.
      operationId: retrieveAllProducts
      responses:
        "200":
          description: All products and their details retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Products"
        "500":
          description: error occurred - see status code and problem object for more information.
          content:
            application/problem+json:
              schema:
                $ref: 'https://opensource.zalando.com/problem/schema.yaml#/Problem'
  /products/{productId}/image:
    parameters:
      - in: path
        name: productId
        schema:
          type: integer
          format: int64
        required: true
    post:
      tags:
        - admin
      summary: Add an image to the specified product with the specified ID.
      operationId: addImageToProduct
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductImage'

      responses:
        "201":
          description: Image added to the product.
        "500":
          description: error occurred - see status code and problem object for more information.
          content:
            application/problem+json:
              schema:
                $ref: 'https://opensource.zalando.com/problem/schema.yaml#/Problem'
    get:
      tags:
        - admin
      summary: Get the image for the requested product id.
      operationId: getProductImage
      responses:
        "200":
          description: Image retrieved for the product.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductImage"

        "500":
          description: error occurred - see status code and problem object for more information.
          content:
            application/problem+json:
              schema:
                $ref: 'https://opensource.zalando.com/problem/schema.yaml#/Problem'

    put:
      tags:
        - admin
      summary: Update the image for the specified product id.
      operationId: editProductImage
      responses:
        "200":
          description: Image successfully updated for the specified product.

        "500":
          description: error occurred - see status code and problem object for more information.
          content:
            application/problem+json:
              schema:
                $ref: 'https://opensource.zalando.com/problem/schema.yaml#/Problem'

  /products/{productId}:
    parameters:
      - name: productId
        in: path
        description: Product ID whose details need to be updated.
        required: true
        schema:
          type: integer
          format: int64
    put:
      tags:
        - admin
      summary: Edit the product with the specified product ID and the provided content in the body.
      operationId: editProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
      responses:
        '200':
          description: Product details successfully updated.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
    delete:
      tags:
      - admin
      summary: Delete the Product with the specified product ID.
      operationId: deleteProduct
      responses:
        "200":
          description: Product successfully deleted.
        "500":
          description: error occurred - see status code and problem object for more information.
          content:
            application/problem+json:
              schema:
                $ref: 'https://opensource.zalando.com/problem/schema.yaml#/Problem'

components:
  schemas:
    Product:
      type: object
      required:
       - name
       - price
      properties:
        id:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: "grey and glitter"
        price:
          type: number
          format: double
          example: '30.00'
        productImage:
          $ref: '#/components/schemas/ProductImage'
    Products:
      type: array
      items:
        $ref: "#/components/schemas/Product"

    ProductImage:
      type: object
      required:
        - fileName
      properties:
        fileName:
          type: string
          format: binary

